[gd_scene load_steps=5 format=3 uid="uid://bxajfs5sef2rp"]

[ext_resource type="PhysicsMaterial" uid="uid://c1llynuxjtqbn" path="res://Reflect.tres" id="1_1gi8i"]

[sub_resource type="GDScript" id="GDScript_4sji6"]
script/source = "extends RigidBody2D

@export var shootStrength: int = 1000
@export var shootAngle: int #using degrees for convenience
@export var bulletsPerShot: int

var bullet: PackedScene

func _ready() -> void:
	bullet = preload(\"res://Objects/bullet.tscn\")

func shoot() -> void:
	
	# Get the current rotation, and apply force to the opposite way.
	var dir: Vector2 = Vector2.RIGHT.from_angle(rotation)
	print(dir * shootStrength)
	apply_central_impulse(dir * -shootStrength) # Make the force negative to simulate recoil

func _input(event: InputEvent) -> void:
	if event.is_action(\"Fire\"):
		shoot()
"

[sub_resource type="PrismMesh" id="PrismMesh_tfb3y"]

[sub_resource type="CircleShape2D" id="CircleShape2D_s1kyi"]
radius = 13.0

[node name="Player" type="RigidBody2D"]
collision_mask = 5
physics_material_override = ExtResource("1_1gi8i")
can_sleep = false
script = SubResource("GDScript_4sji6")
shootStrength = 1
shootAngle = 50
bulletsPerShot = 5

[node name="MeshInstance2D" type="MeshInstance2D" parent="."]
position = Vector2(2, 0)
rotation = -1.5708
scale = Vector2(20, 20)
mesh = SubResource("PrismMesh_tfb3y")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("CircleShape2D_s1kyi")
